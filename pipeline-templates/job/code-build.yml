parameters:
  BuildConfiguration:

jobs:
- job: CodeBuild
  pool:
    name: 'DAS - Continuous Integration'
    demands:
      - Agent.OS -equals Windows_NT
    workspace:
      clean: all
  variables:
  - group: BUILD Management Resources
  steps:
  - template: azure-pipelines-templates/build/step/gitversion.yml@das-platform-building-blocks

  - task: SonarCloudPrepare@1
    displayName: Prepare SonarCloud analysis configuration
    condition: and(succeeded(), or(in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/main'), eq(variables['Build.Reason'], 'PullRequest')))
    inputs:
      SonarCloud: ESFA - SonarCloud
      organization: $(SonarCloudOrganisationKey)
      scannerMode: MSBuild
      projectName: "$(Build.DefinitionName)"
      projectKey: SkillsFundingAgency_das-employer-finance
      extraProperties: |
        sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/CoverageResults/coverage.opencover.xml

  - task: DotNetCoreCLI@2
    displayName: 'dotnet restore all'
    inputs:
      command: restore
      projects: "src/**/*.csproj"
      noCache: true

  - task: VSBuild@1
    displayName: 'Build solution Employer Finance'
    inputs:
      solution: 'src/SFA.DAS.EmployerFinance.sln'
      vsVersion: 16.0
      platform: 'any cpu'
      configuration: 'release'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet pack'
    inputs:
      command: pack
      packagesToPack: 'src/SFA.DAS.EmployerFinance.Api.Client/SFA.DAS.EmployerFinance.Api.Client.csproj;src/SFA.DAS.EmployerFinance.Api.Types/SFA.DAS.EmployerFinance.Api.Types.csproj;src/SFA.DAS.EmployerFinance.Events/SFA.DAS.EmployerFinance.Events.csproj;src/SFA.DAS.EmployerFinance.Messages/SFA.DAS.EmployerFinance.Messages.csproj;src/SFA.DAS.EmployerFinance.Types/SFA.DAS.EmployerFinance.Types.csproj'
      packDirectory: '$(build.artifactstagingdirectory)/publish'
      versioningScheme: byBuildNumber

  - task: VSBuild@1
    displayName: 'Publish SFA.DAS.EmployerFinance.Api'
    inputs:
      solution: 'src/SFA.DAS.EmployerFinance.Api/SFA.DAS.EmployerFinance.Api.csproj'
      vsVersion: 16.0
      msbuildArgs: '/p:DeployOnBuild=true /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:SkipInvalidConfigurations=true /p:publishUrl="$(build.artifactstagingdirectory)/SFA.DAS.EmployerFinance.Api"'
      platform: 'anycpu'
      configuration: 'release'
      clean: true

  - task: ArchiveFiles@2
    displayName: 'Archive SFA.DAS.EmployerFinance.Api'
    inputs:
      includeRootFolder: false
      rootFolderOrFile: '$(build.artifactstagingdirectory)/SFA.DAS.EmployerFinance.Api'
      archiveFile: '$(Build.ArtifactStagingDirectory)/publish/SFA.DAS.EmployerFinance.Api.zip'

  - task: VSBuild@1
    displayName: 'Publish SFA.DAS.EmployerFinance.Web'
    inputs:
      solution: 'src/SFA.DAS.EmployerFinance.Web/SFA.DAS.EmployerFinance.Web.csproj'
      vsVersion: 16.0
      msbuildArgs: '/p:DeployOnBuild=true /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:SkipInvalidConfigurations=true /p:publishUrl="$(build.artifactstagingdirectory)/SFA.DAS.EmployerFinance.Web"'
      platform: 'anycpu'
      configuration: 'release'
      clean: true

  - task: ArchiveFiles@2
    displayName: 'Archive SFA.DAS.EmployerFinance.Web'
    inputs:
      includeRootFolder: false
      rootFolderOrFile: '$(build.artifactstagingdirectory)/SFA.DAS.EmployerFinance.Web'
      archiveFile: '$(Build.ArtifactStagingDirectory)/publish/SFA.DAS.EmployerFinance.Web.zip'

  - task: VSBuild@1
    displayName: 'Publish SFA.DAS.EmployerFinance.Host'
    inputs:
      solution: 'src/SFA.DAS.EmployerFinance.Host/SFA.DAS.EmployerFinance.Host.csproj'
      vsVersion: 16.0
      msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)/publish"'
      platform: 'anycpu'
      configuration: 'release'
      clean: true

  - task: VSTest@2
    displayName: 'VsTest - testAssemblies'
    inputs:
      testAssemblyVer2: '**/bin/**/*UnitTests.dll'
      platform: 'any cpu'
      configuration: 'release'

  - task: SonarCloudAnalyze@1
    displayName: 'Run SonarCloud analysis'
    condition: and(succeeded(), or(in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/main'), eq(variables['Build.Reason'], 'PullRequest')))

  - task: SonarCloudPublish@1
    displayName: 'Publish results on build summary'
    condition: and(succeeded(), or(in(variables['Build.SourceBranch'], 'refs/heads/master', 'refs/heads/main'), eq(variables['Build.Reason'], 'PullRequest')))
    inputs:
      pollingTimeoutSec: '300'

  - task: CopyFiles@2
    displayName: Copy Files to $(build.artifactstagingdirectory)/publish
    inputs:
      Contents: |
        azure/**
        src/**/bin/**/*.dacpac
      TargetFolder: $(build.artifactstagingdirectory)/publish

  - task: PublishPipelineArtifact@1
    displayName: Publish Build Artifact
    inputs:
      targetPath: $(build.artifactstagingdirectory)/publish
      artifactName: ${{ parameters.SolutionBaseName }}
