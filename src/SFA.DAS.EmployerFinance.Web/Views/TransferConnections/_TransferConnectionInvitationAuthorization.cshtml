@using SFA.DAS.EmployerFinance.Interfaces

@inject IUrlActionHelper UrlHelper

@model SFA.DAS.EmployerFinance.Web.ViewModels.Transfers.TransferConnectionInvitationAuthorizationViewModel

<p>Employers who pay the apprenticeship levy can connect with other employers and transfer up to @Model.TransferAllowancePercentage.ToString("N0")% of their previous year's annual funds.</p>

@if (Model.AuthorizationResult)
{
    <p>Before starting a connection both the sending and receiving employers need to read and understand the <a href="https://www.gov.uk/government/publications/apprenticeship-funding-and-performance-management-rules-2017-to-2018" class="govuk-link" rel="nofollow">rules for sending and receiving transfers</a>.</p>
    <div class="govuk-inset-text">
        <p>Only the sending employer can start a connection.</p>
    </div>

    if (Model.IsValidSender)
    {
        <a class="govuk-button" href="@Url.Action("Index", "TransferConnectionInvitations", new{Model.HashedAccountId})">Connect to a receiving employer</a>
    }
}
else 
{
    <p>Before starting a connection both the sending and receiving employers need to read and understand the <a href="https://www.gov.uk/guidance/apprenticeship-funding-rules" class="govuk-link" rel="nofollow">rules for sending and receiving transfers</a> and accept the updated organisation agreement with Department for Education (DfE).</p>
    <a class="govuk-button" href="@UrlHelper.EmployerAccountsAction("agreements")">Accept agreement</a>
}

@* // else TODO this should be an access denied exception *@
@* // { *@
@* //     throw new ApplicationException($"Transfer connections feature not authorized because {Model.AuthorizationResult.ToString()}"); *@
@* // } *@
