@using System.Globalization
@using SFA.DAS.Common.Domain.Types;
@using SFA.DAS.EmployerFinance.Interfaces

@inject IUrlActionHelper UrlHelpers;

@model SFA.DAS.EmployerFinance.Web.Orchestrators.OrchestratorResponse<ProviderPaymentsSummaryViewModel>

@{
    var culture = new CultureInfo("en-GB");
    ViewBag.PageID = "provider-payment-summary";
    ViewBag.Title = "Payment details";
    ViewBag.Section = "finance";
    ViewBag.GaData.Vpv = $"/finance/{ViewBag.PageID}";
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-xl">Payment details</h1>
        <dl class="govuk-summary-list">
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">Date</dt>
                <dd class="govuk-summary-list__value">@Model.Data.PaymentDate.ToGdsFormat()</dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">Payment to</dt>
                <dd class="govuk-summary-list__value">@Model.Data.ProviderName</dd>
            </div>
        </dl>
    </div>
</div>

        <table class="govuk-table das-table--responsive">
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th class="govuk-table__header" colspan="@(Model.Data.ShowNonCoInvesmentPaymentsTotal ? "2" : "1")"></th>
                    <th class="govuk-table__header app-table__cell--highlight app-table__cell--colgroup" scope="colgroup" colspan="2">Co-investment</th>
                    <th class="govuk-table__header" colspan="2"></th>
                </tr>
                <tr class="govuk-table__row">
                    <th scope="col" class="govuk-table__header das-table-cell-width-20">Course</th>
                    @if (Model.Data.ShowNonCoInvesmentPaymentsTotal)
                    {
                        <th scope="col" class="govuk-table__header govuk-table__header--numeric das-table-cell-width-20">@(Model.Data.ApprenticeshipEmployerType == ApprenticeshipEmployerType.Levy ? "Paid from levy" : "Transferred funds")</th>
                    }
                    <th scope="col" class="govuk-table__header govuk-table__header--numeric das-table-cell-width-20 app-table__cell--highlight">Government contribution</th>
                    <th scope="col" class="govuk-table__header govuk-table__header--numeric das-table-cell-width-20 app-table__cell--highlight">Your contribution</th>
                    <th scope="col" class="govuk-table__header govuk-table__header--numeric das-table-cell-width-15">Amount</th>
                    <th scope="col" class="govuk-table__header das-table-cell-width-5"><span class="govuk-visually-hidden">Action</span></th>
                </tr>
            </thead>
            <tbody class="govuk-table__body">
                @foreach (var coursePaymentSummary in Model.Data.CoursePayments)
                {
                    <tr class="govuk-table__row">
                        @if (string.IsNullOrEmpty(coursePaymentSummary.CourseName))
                        {
                            <td data-label="Course" class="govuk-table__cell">(Course details not available)</td>
                        }
                        else
                        {
                            <td data-label="Course" class="govuk-table__cell">@coursePaymentSummary.CourseName: @coursePaymentSummary.PathwayName <span class="no-wrap">level @coursePaymentSummary.CourseLevel</span></td>
                        }

                        @if (Model.Data.ShowNonCoInvesmentPaymentsTotal)
                        {
                            <td class="govuk-table__cell govuk-table__cell--numeric" data-label="Paid from levy">@coursePaymentSummary.LevyPaymentAmount.ToString("C2", culture)</td>
                        }
                        <td class="govuk-table__cell govuk-table__cell--numeric app-table__cell--highlight" data-label="Government contribution">@coursePaymentSummary.SFACoInvestmentAmount.ToString("C2", culture)</td>
                        <td class="govuk-table__cell govuk-table__cell--numeric app-table__cell--highlight" data-label="Your contribution">@coursePaymentSummary.EmployerCoInvestmentAmount.ToString("C2", culture)</td>
                        <td class="govuk-table__cell govuk-table__cell--numeric" data-label="Amount">@coursePaymentSummary.TotalAmount.ToString("C2", culture)</td>
                        <td class="govuk-table__cell govuk-table__cell--numeric">
                            @{
                                var courseDetailsLink = string.Empty;

                                if (!coursePaymentSummary.PathwayCode.HasValue)
                                {
                                    courseDetailsLink = Url.Action("CourseStandardPaymentSummary", "EmployerAccountTransactions",
                                        new
                                        {
                                            hashedAccountId = Model.Data.HashedAccountId,
                                            Ukprn = Model.Data.UkPrn,
                                            CourseName = coursePaymentSummary.CourseName,
                                            CourseLevel = coursePaymentSummary.CourseLevel,
                                            Model.Data.FromDate,
                                            Model.Data.ToDate
                                        });
                                }
                                else
                                {
                                    courseDetailsLink = Url.Action("CourseFrameworkPaymentSummary", "EmployerAccountTransactions",
                                        new
                                        {
                                            hashedAccountId = Model.Data.HashedAccountId,
                                            Ukprn = Model.Data.UkPrn,
                                            CourseName = coursePaymentSummary.CourseName,
                                            CourseLevel = coursePaymentSummary.CourseLevel,
                                            PathwayCode = coursePaymentSummary.PathwayCode,
                                            Model.Data.FromDate,
                                            Model.Data.ToDate
                                        });
                                }
                            }

                            <a class="govuk-link" id="CoursePaymentDetails" title="View details of payment for @coursePaymentSummary.CourseName level @coursePaymentSummary.CourseLevel" href="@courseDetailsLink">
                                Details <span class="govuk-visually-hidden"> of payment for @coursePaymentSummary.CourseName level @coursePaymentSummary.CourseLevel</span>
                            </a>
                        </td>
                    </tr>
                }
          
         
                <tr class="govuk-table__row">
                    <td data-label="Totals" class="app-table__cell--transparent"> </td>
                    @if (Model.Data.ShowNonCoInvesmentPaymentsTotal)
                    {
                        <td data-label="Paid from levy" class="govuk-table__cell govuk-table__cell--numeric app-table__cell--total">@Model.Data.LevyPaymentsTotal.ToString("C2", culture)</td>
                    }
                    <td data-label="Government contribution" class="govuk-table__cell govuk-table__cell--numeric app-table__cell--highlight app-table__cell--total">@Model.Data.SFACoInvestmentsTotal.ToString("C2", culture)</td>
                    <td data-label="Your contribution" class="govuk-table__cell govuk-table__cell--numeric app-table__cell--highlight app-table__cell--total">@Model.Data.EmployerCoInvestmentsTotal.ToString("C2", culture)</td>
                    <td data-label="Amount" class="govuk-table__cell govuk-table__cell--numeric app-table__cell--total">@Model.Data.PaymentsTotal.ToString("C2", culture)</td>
                    <td></td>
                </tr>
            </tbody>
        </table>
        <div class="govuk-inset-text">
            <p>It's up to you and your training provider to decide when your contribution is paid.</p>
        </div>

        @if (Model.Data.PaymentDate.Equals(new DateTime(2017, 09, 14)))
        {
            <div class="govuk-inset-text">
                <h3 class="govuk-heading-s">Why are there two payments to individual providers this month?</h3>
                <p>
                    The second payment is the result of final adjustments made by the training providers
                    for the academic year ending 31 July 2017. These payments only occur in September and October.
                </p>
            </div>
        }

        @if (Model.Data.PaymentDate.Equals(new DateTime(2017, 11, 2)))
        {
            <div class="govuk-inset-text">
                <h3 class="govuk-heading-s">Note on payments dated 2 November</h3>
                <p>
                    Payments on 2 November are for final costs submitted by training providers for training
                    during the academic year ending July 31 2017. The amount was calculated based on your
                    levy balance on 6 October and does not include the levy payment on 23 October.
                </p>
            </div>
        }


@section breadcrumb {
    <div class="govuk-breadcrumbs">
        <ol class="govuk-breadcrumbs__list">
            <li class="govuk-breadcrumbs__list-item"><a href="@UrlHelpers.EmployerAccountsAction($"accounts/{@Model.Data.HashedAccountId}/teams")" class="govuk-breadcrumbs__link">Home</a></li>
            <li class="govuk-breadcrumbs__list-item"><a href="@Url.Action("Index", "EmployerAccountTransactions")" class="govuk-breadcrumbs__link">Your transactions</a></li>
            <li class="govuk-breadcrumbs__list-item">Debit details</li>
        </ol>
    </div>
}