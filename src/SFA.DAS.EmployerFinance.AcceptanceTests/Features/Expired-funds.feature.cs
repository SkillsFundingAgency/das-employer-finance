// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SFA.DAS.EmployerFinance.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Expired-funds")]
    public partial class Expired_FundsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "Expired-funds.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "Expired-funds", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Expired funds")]
        public void ExpiredFunds()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Expired funds", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 3
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
 testRunner.Given("We have an account with a paye scheme", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
                TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                            "TransactionType",
                            "Amount",
                            "DateCreated"});
                table1.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-04-23"});
                table1.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-05-23"});
                table1.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-06-23"});
                table1.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-07-23"});
                table1.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-08-23"});
                table1.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-09-23"});
                table1.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-10-23"});
                table1.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-11-23"});
                table1.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-12-23"});
                table1.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-01-23"});
                table1.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-02-23"});
                table1.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-03-23"});
                table1.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-04-23"});
#line 5
 testRunner.And("the account has transactions", ((string)(null)), table1, "And ");
#line hidden
#line 20
 testRunner.When("the expire funds process runs on 2019-04-28 with a 12 month expiry period", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 21
 testRunner.Then("we should see a level 1 screen with a balance of 12000 on the 04/2019", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 22
 testRunner.And("we should see a level 1 screen with expired levy of -1000 on the 04/2019", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Expired funds after levy adjustments, payments and transfers")]
        public void ExpiredFundsAfterLevyAdjustmentsPaymentsAndTransfers()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Expired funds after levy adjustments, payments and transfers", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 24
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 25
    testRunner.Given("We have an account with a paye scheme", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 26
 testRunner.And("we have period ends from 1718-R09 to 1920-R04", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                            "TransactionType",
                            "Amount",
                            "DateCreated",
                            "PeriodEnd"});
                table2.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-04-23",
                            ""});
                table2.AddRow(new string[] {
                            "Declaration",
                            "-200",
                            "2018-05-23",
                            ""});
                table2.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-06-23",
                            ""});
                table2.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-07-23",
                            ""});
                table2.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-08-23",
                            ""});
                table2.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-09-23",
                            ""});
                table2.AddRow(new string[] {
                            "Declaration",
                            "-4500",
                            "2018-10-23",
                            ""});
                table2.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-11-23",
                            ""});
                table2.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-12-23",
                            ""});
                table2.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-01-23",
                            ""});
                table2.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-02-23",
                            ""});
                table2.AddRow(new string[] {
                            "Declaration",
                            "-400",
                            "2019-03-23",
                            ""});
                table2.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-04-23",
                            ""});
                table2.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-05-05",
                            "1718-R09"});
                table2.AddRow(new string[] {
                            "Payment",
                            "10",
                            "2018-06-05",
                            "1718-R10"});
                table2.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-07-05",
                            "1718-R11"});
                table2.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-08-05",
                            "1718-R12"});
                table2.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-09-05",
                            "1819-R01"});
                table2.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-10-05",
                            "1819-R02"});
                table2.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-11-05",
                            "1819-R03"});
                table2.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-12-05",
                            "1819-R04"});
                table2.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-01-05",
                            "1819-R05"});
                table2.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-02-05",
                            "1819-R06"});
                table2.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-03-05",
                            "1819-R07"});
                table2.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-04-05",
                            "1819-R08"});
                table2.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-01-05",
                            "1819-R05"});
                table2.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-02-05",
                            "1819-R06"});
                table2.AddRow(new string[] {
                            "Transfer",
                            "5",
                            "2019-03-05",
                            "1819-R07"});
                table2.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-04-05",
                            "1819-R08"});
#line 27
    testRunner.And("the account has transactions", ((string)(null)), table2, "And ");
#line hidden
#line 58
 testRunner.When("the expire funds process runs on 2019-04-28 with a 12 month expiry period", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 59
 testRunner.Then("we should see a level 1 screen with a balance of 4600 on the 04/2019", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 60
 testRunner.And("we should see a level 1 screen with a total levy of 1000 on the 04/2019", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 61
 testRunner.And("we should see a level 1 screen with a total payment of -10 on the 04/2019", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 62
 testRunner.And("we should see a level 1 screen with a total transfer of -5 on the 04/2019", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 63
 testRunner.And("we should see a level 1 screen with expired levy of -190 on the 04/2019", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("No expired funds after levy adjustments, payments, transfers and one month of pre" +
            "viously expired funds")]
        public void NoExpiredFundsAfterLevyAdjustmentsPaymentsTransfersAndOneMonthOfPreviouslyExpiredFunds()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("No expired funds after levy adjustments, payments, transfers and one month of pre" +
                    "viously expired funds", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 65
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 66
 testRunner.Given("We have an account with a paye scheme", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 67
 testRunner.And("we have period ends from 1718-R09 to 1920-R04", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                            "TransactionType",
                            "Amount",
                            "DateCreated",
                            "PeriodEnd"});
                table3.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-04-23",
                            ""});
                table3.AddRow(new string[] {
                            "Declaration",
                            "-200",
                            "2018-05-23",
                            ""});
                table3.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-06-23",
                            ""});
                table3.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-07-23",
                            ""});
                table3.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-08-23",
                            ""});
                table3.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-09-23",
                            ""});
                table3.AddRow(new string[] {
                            "Declaration",
                            "-4500",
                            "2018-10-23",
                            ""});
                table3.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-11-23",
                            ""});
                table3.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-12-23",
                            ""});
                table3.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-01-23",
                            ""});
                table3.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-02-23",
                            ""});
                table3.AddRow(new string[] {
                            "Declaration",
                            "-400",
                            "2019-03-23",
                            ""});
                table3.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-04-23",
                            ""});
                table3.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-05-23",
                            ""});
                table3.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-05-05",
                            "1718-R09"});
                table3.AddRow(new string[] {
                            "Payment",
                            "10",
                            "2018-06-05",
                            "1718-R10"});
                table3.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-07-05",
                            "1718-R11"});
                table3.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-08-05",
                            "1718-R12"});
                table3.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-09-05",
                            "1819-R01"});
                table3.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-10-05",
                            "1819-R02"});
                table3.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-11-05",
                            "1819-R03"});
                table3.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-12-05",
                            "1819-R04"});
                table3.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-01-05",
                            "1819-R05"});
                table3.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-02-05",
                            "1819-R06"});
                table3.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-03-05",
                            "1819-R07"});
                table3.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-04-05",
                            "1819-R08"});
                table3.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-05-05",
                            "1819-R09"});
                table3.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-01-05",
                            "1819-R05"});
                table3.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-02-05",
                            "1819-R06"});
                table3.AddRow(new string[] {
                            "Transfer",
                            "5",
                            "2019-03-05",
                            "1819-R07"});
                table3.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-04-05",
                            "1819-R08"});
                table3.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-05-05",
                            "1819-R09"});
                table3.AddRow(new string[] {
                            "ExpiredFund",
                            "-190",
                            "2019-04-28",
                            ""});
#line 68
 testRunner.And("the account has transactions", ((string)(null)), table3, "And ");
#line hidden
#line 103
 testRunner.When("the expire funds process runs on 2019-05-28 with a 12 month expiry period", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 104
 testRunner.Then("we should see a level 1 screen with a balance of 5585 on the 05/2019", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 105
 testRunner.And("we should see a level 1 screen with a total levy of 1000 on the 05/2019", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 106
 testRunner.And("we should see a level 1 screen with a total payment of -10 on the 05/2019", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 107
 testRunner.And("we should see a level 1 screen with a total transfer of -5 on the 05/2019", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 108
 testRunner.And("we should see a level 1 screen with expired levy of 0 on the 05/2019", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Expired funds after levy adjustments, payments, transfers and one month of previo" +
            "usly expired funds")]
        public void ExpiredFundsAfterLevyAdjustmentsPaymentsTransfersAndOneMonthOfPreviouslyExpiredFunds()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Expired funds after levy adjustments, payments, transfers and one month of previo" +
                    "usly expired funds", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 110
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 111
 testRunner.Given("We have an account with a paye scheme", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 112
 testRunner.And("we have period ends from 1718-R09 to 1920-R04", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                            "TransactionType",
                            "Amount",
                            "DateCreated",
                            "PeriodEnd"});
                table4.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-04-23",
                            ""});
                table4.AddRow(new string[] {
                            "Declaration",
                            "-200",
                            "2018-05-23",
                            ""});
                table4.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-06-23",
                            ""});
                table4.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-07-23",
                            ""});
                table4.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-08-23",
                            ""});
                table4.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-09-23",
                            ""});
                table4.AddRow(new string[] {
                            "Declaration",
                            "-4500",
                            "2018-10-23",
                            ""});
                table4.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-11-23",
                            ""});
                table4.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-12-23",
                            ""});
                table4.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-01-23",
                            ""});
                table4.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-02-23",
                            ""});
                table4.AddRow(new string[] {
                            "Declaration",
                            "-400",
                            "2019-03-23",
                            ""});
                table4.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-04-23",
                            ""});
                table4.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-05-23",
                            ""});
                table4.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-06-23",
                            ""});
                table4.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-07-23",
                            ""});
                table4.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-08-23",
                            ""});
                table4.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-09-23",
                            ""});
                table4.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-10-23",
                            ""});
                table4.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-11-23",
                            ""});
                table4.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-05-05",
                            "1718-R09"});
                table4.AddRow(new string[] {
                            "Payment",
                            "10",
                            "2018-06-05",
                            "1718-R10"});
                table4.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-07-05",
                            "1718-R11"});
                table4.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-08-05",
                            "1718-R12"});
                table4.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-09-05",
                            "1819-R01"});
                table4.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-10-05",
                            "1819-R02"});
                table4.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-11-05",
                            "1819-R03"});
                table4.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-12-05",
                            "1819-R04"});
                table4.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-01-05",
                            "1819-R05"});
                table4.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-02-05",
                            "1819-R06"});
                table4.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-03-05",
                            "1819-R07"});
                table4.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-04-05",
                            "1819-R08"});
                table4.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-05-05",
                            "1819-R09"});
                table4.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-06-05",
                            "1819-R10"});
                table4.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-07-05",
                            "1819-R11"});
                table4.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-08-05",
                            "1819-R12"});
                table4.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-09-05",
                            "1920-R01"});
                table4.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-10-05",
                            "1920-R02"});
                table4.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-11-05",
                            "1920-R03"});
                table4.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-01-05",
                            "1819-R05"});
                table4.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-02-05",
                            "1819-R06"});
                table4.AddRow(new string[] {
                            "Transfer",
                            "5",
                            "2019-03-05",
                            "1819-R07"});
                table4.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-04-05",
                            "1819-R08"});
                table4.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-05-05",
                            "1819-R09"});
                table4.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-06-05",
                            "1819-R10"});
                table4.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-07-05",
                            "1819-R11"});
                table4.AddRow(new string[] {
                            "Transfer",
                            "5",
                            "2019-08-05",
                            "1819-R12"});
                table4.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-09-05",
                            "1920-R01"});
                table4.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-10-05",
                            "1920-R02"});
                table4.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-11-05",
                            "1920-R03"});
                table4.AddRow(new string[] {
                            "ExpiredFund",
                            "-190",
                            "2019-04-28",
                            ""});
#line 113
 testRunner.And("the account has transactions", ((string)(null)), table4, "And ");
#line hidden
#line 166
 testRunner.When("the expire funds process runs on 2019-11-28 with a 12 month expiry period", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 167
 testRunner.Then("we should see a level 1 screen with a balance of 10600 on the 11/2019", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 168
 testRunner.And("we should see a level 1 screen with a total levy of 1000 on the 11/2019", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 169
 testRunner.And("we should see a level 1 screen with a total payment of -10 on the 11/2019", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 170
 testRunner.And("we should see a level 1 screen with a total transfer of -5 on the 11/2019", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 171
 testRunner.And("we should see a level 1 screen with expired levy of -905 on the 11/2019", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Expired funds after levy adjustments, payments, transfers and multiple months of " +
            "previously expired funds")]
        public void ExpiredFundsAfterLevyAdjustmentsPaymentsTransfersAndMultipleMonthsOfPreviouslyExpiredFunds()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Expired funds after levy adjustments, payments, transfers and multiple months of " +
                    "previously expired funds", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 173
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 174
 testRunner.Given("We have an account with a paye scheme", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 175
 testRunner.And("we have period ends from 1718-R09 to 1920-R04", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                            "TransactionType",
                            "Amount",
                            "DateCreated",
                            "PeriodEnd"});
                table5.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-04-23",
                            ""});
                table5.AddRow(new string[] {
                            "Declaration",
                            "-200",
                            "2018-05-23",
                            ""});
                table5.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-06-23",
                            ""});
                table5.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-07-23",
                            ""});
                table5.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-08-23",
                            ""});
                table5.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-09-23",
                            ""});
                table5.AddRow(new string[] {
                            "Declaration",
                            "-4500",
                            "2018-10-23",
                            ""});
                table5.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-11-23",
                            ""});
                table5.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2018-12-23",
                            ""});
                table5.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-01-23",
                            ""});
                table5.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-02-23",
                            ""});
                table5.AddRow(new string[] {
                            "Declaration",
                            "-400",
                            "2019-03-23",
                            ""});
                table5.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-04-23",
                            ""});
                table5.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-05-23",
                            ""});
                table5.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-06-23",
                            ""});
                table5.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-07-23",
                            ""});
                table5.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-08-23",
                            ""});
                table5.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-09-23",
                            ""});
                table5.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-10-23",
                            ""});
                table5.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-11-23",
                            ""});
                table5.AddRow(new string[] {
                            "Declaration",
                            "1000",
                            "2019-12-23",
                            ""});
                table5.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-05-05",
                            "1718-R09"});
                table5.AddRow(new string[] {
                            "Payment",
                            "10",
                            "2018-06-05",
                            "1718-R10"});
                table5.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-07-05",
                            "1718-R11"});
                table5.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-08-05",
                            "1718-R12"});
                table5.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-09-05",
                            "1819-R01"});
                table5.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-10-05",
                            "1819-R02"});
                table5.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-11-05",
                            "1819-R03"});
                table5.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2018-12-05",
                            "1819-R04"});
                table5.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-01-05",
                            "1819-R05"});
                table5.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-02-05",
                            "1819-R06"});
                table5.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-03-05",
                            "1819-R07"});
                table5.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-04-05",
                            "1819-R08"});
                table5.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-05-05",
                            "1819-R09"});
                table5.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-06-05",
                            "1819-R10"});
                table5.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-07-05",
                            "1819-R11"});
                table5.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-08-05",
                            "1819-R12"});
                table5.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-09-05",
                            "1920-R01"});
                table5.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-10-05",
                            "1920-R02"});
                table5.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-11-05",
                            "1920-R03"});
                table5.AddRow(new string[] {
                            "Payment",
                            "-10",
                            "2019-12-05",
                            "1920-R04"});
                table5.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-01-05",
                            "1819-R05"});
                table5.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-02-05",
                            "1819-R06"});
                table5.AddRow(new string[] {
                            "Transfer",
                            "5",
                            "2019-03-05",
                            "1819-R07"});
                table5.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-04-05",
                            "1819-R08"});
                table5.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-05-05",
                            "1819-R09"});
                table5.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-06-05",
                            "1819-R10"});
                table5.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-07-05",
                            "1819-R11"});
                table5.AddRow(new string[] {
                            "Transfer",
                            "5",
                            "2019-08-05",
                            "1819-R12"});
                table5.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-09-05",
                            "1920-R01"});
                table5.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-10-05",
                            "1920-R02"});
                table5.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-11-05",
                            "1920-R03"});
                table5.AddRow(new string[] {
                            "Transfer",
                            "-5",
                            "2019-12-05",
                            "1920-R04"});
                table5.AddRow(new string[] {
                            "ExpiredFund",
                            "-190",
                            "2019-04-28",
                            ""});
                table5.AddRow(new string[] {
                            "ExpiredFund",
                            "-905",
                            "2019-11-28",
                            ""});
#line 176
 testRunner.And("the account has transactions", ((string)(null)), table5, "And ");
#line hidden
#line 233
 testRunner.When("the expire funds process runs on 2019-12-28 with a 12 month expiry period", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 234
 testRunner.Then("we should see a level 1 screen with a balance of 10600 on the 12/2019", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 235
 testRunner.And("we should see a level 1 screen with a total levy of 1000 on the 12/2019", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 236
 testRunner.And("we should see a level 1 screen with a total payment of -10 on the 12/2019", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 237
 testRunner.And("we should see a level 1 screen with a total transfer of -5 on the 12/2019", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 238
 testRunner.And("we should see a level 1 screen with expired levy of -985 on the 12/2019", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
